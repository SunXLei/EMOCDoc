<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Extend EMOC on EMOC</title><link>https://sunxlei.github.io/EMOCDoc/docs/extend_emoc/</link><description>Recent content in Extend EMOC on EMOC</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://sunxlei.github.io/EMOCDoc/docs/extend_emoc/index.xml" rel="self" type="application/rss+xml"/><item><title>Problem</title><link>https://sunxlei.github.io/EMOCDoc/docs/extend_emoc/problem/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sunxlei.github.io/EMOCDoc/docs/extend_emoc/problem/</guid><description>Add New Problems in EMOC # Due to the simple structure of EMOC, it is straightforward to add a new problem in EMOC. This needs three steps as below. We will take the test problem ZDT1 as an example.
Create the Declaration # First, we need to create a header file to make a declaration of ZDT1. Although there is no strict position request. We recommend to go to the directory &amp;rsquo;/src/problem/&amp;rsquo;, make a new directory &amp;rsquo;/zdt&amp;rsquo; and create a header file &amp;lsquo;zdt.</description></item><item><title>Algorithm</title><link>https://sunxlei.github.io/EMOCDoc/docs/extend_emoc/algorithm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://sunxlei.github.io/EMOCDoc/docs/extend_emoc/algorithm/</guid><description>Add New Algorithms in EMOC # Adding a new algorithm is very similar to adding a new problem. We will take NSGA2 as an example (for simplicity, some details are omitted, users can check the complete source code themselves).
Create the Declaration # First, let&amp;rsquo;s go to the directory &amp;rsquo;/src/algorithm/&amp;rsquo;, make a new directory &amp;rsquo;/nsga2&amp;rsquo; and create a header file &amp;rsquo;nsga2.h&amp;rsquo; in it. We make the declaration about class NSGA2 which inherits from class Algorithm in &amp;rsquo;nsga2.</description></item></channel></rss>